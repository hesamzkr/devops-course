
name: Build, Staging, Deployment

on:
  push:
    branches:
      - exam
      - main

jobs:
  test:
    runs-on: self-hosted

    steps:
      - name: Test Docker Compose
        run: |
          docker compose up

  build:
    runs-on: self-hosted
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker image
        run: |
          docker build -t ttl.sh/hesamzkr-node-app .
          docker push ttl.sh/hesamzkr-node-app

  staging:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Deploy to Staging VM
        env:
          DEPLOY_HOST: 192.168.105.3
          DEPLOY_USER: vagrant
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "${SSH_KEY}" > ssh_key
          chmod 600 ssh_key
          ssh -o StrictHostKeyChecking=no -i ssh_key ${DEPLOY_USER}@${DEPLOY_HOST} << 'EOF'
            docker stop hesamzkr-node-app || true
            docker rm hesamzkr-node-app || true
            docker run -d -p 80:4444 --name hesamzkr-node-app ttl.sh/hesamzkr-node-app:latest

  production:
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    needs: health-staging

    steps:
      - name: Deploy to target VM
        env:
          DEPLOY_HOST: ec2-13-48-1-36.eu-north-1.compute.amazonaws.com
          DEPLOY_USER: ubuntu
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "${SSH_KEY}" > ssh_key
          chmod 600 ssh_key
          ssh -o StrictHostKeyChecking=no -i ssh_key ${DEPLOY_USER}@${DEPLOY_HOST} << 'EOF'
            # sudo apt update
            # sudo apt install -y docker.io
            sudo systemctl start docker
            sudo docker stop hesamzkr-node-app || true
            sudo docker rm hesamzkr-node-app || true
            sudo docker run -d -p 80:4444 --name hesamzkr-node-app ttl.sh/hesamzkr-node-app:latest

  health-staging:
    runs-on: self-hosted
    needs: staging

    steps:
      - name: Test Staging
        run: |
          curl -f -s -o /dev/null 192.168.105.3/api || exit 1

  health-production:
    runs-on: self-hosted
    needs: production

    steps:
      - name: Test Production
        run: |
          curl -f -s -o /dev/null ec2-13-48-1-36.eu-north-1.compute.amazonaws.com/api || exit 1

